{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple API for developer CRUD app",
    "version": "1.0.0",
    "title": "Developer CRUD REST app",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "eosfore@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "developer-crud-rest.herokuapp.com",
  "basePath": "/api/v1",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/skill": {
      "get": {
        "operationId": "SkillServler.doGet()",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "id of the skill to add",
            "type": "integer",
            "format": "int64",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "founded skills",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Skill"
              }
            }
          }
        }
      },
      "post": {
        "summary": "adds a skill",
        "operationId": "SkillServlet.doPost",
        "description": "Adds a skill",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "skill",
            "description": "skill to add",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/skill'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates a skill",
        "operationId": "SkillServlet.doPut",
        "description": "Updates a skill",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "skill",
            "description": "skill to update",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/skill'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes a skill",
        "operationId": "SkillServlet.doDelete",
        "description": "Deletes a skill",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "skill",
            "description": "skill to delete",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/skill'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/account": {
      "get": {
        "summary": "searches account",
        "operationId": "AccountServlet.doGet",
        "description": "Searches all accounts if there no id parametr in request. \nIn another case searches account by id\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "id of the account to search",
            "type": "integer",
            "format": "int64",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "search account by id or all accounts if id isn't present",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "post": {
        "summary": "adds an account",
        "operationId": "AccountServlet.doPost",
        "description": "Adds an account",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "description": "account to add",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/account'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates an account",
        "operationId": "AccountServlet.doPut",
        "description": "Updates an account",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "description": "account to update",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/account'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes an account",
        "operationId": "AccountServlet.doDelete",
        "description": "Deletes an account",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "description": "account to delete",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/account'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/developer": {
      "get": {
        "summary": "searches developer",
        "operationId": "DeveloperServlet.doGet",
        "description": "Searches all developers if there no id parametr in request. \nIn another case searches developer by id\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "id of the developer to search",
            "type": "integer",
            "format": "int64",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "search developer by id or all developers if id isn't present",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Developer"
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "post": {
        "summary": "adds a developer",
        "operationId": "DeveloperServlet.doPost",
        "description": "Adds a developer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "developer",
            "description": "developer to add",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/developer'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates a developer",
        "operationId": "DeveloperServlet.doPut",
        "description": "Updates a developer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "developer",
            "description": "developer to update",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/developer'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes a developer",
        "operationId": "DeveloperServlet.doDelete",
        "description": "Deletes a developer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "developer",
            "description": "developer to delete",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "redirect to '/api/v1/developer'"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Skill": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "string"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "BANNED",
            "DELETED"
          ]
        }
      }
    },
    "Developer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}